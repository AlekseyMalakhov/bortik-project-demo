{"version":3,"sources":["settings/colors.js","settings/baseURL.js","api/client.js","api/items.js","store/manage.js","components/MenuButton.js","components/Header.js","components/Item.js","components/Sidebar.js","components/AddRemoveButton.js","components/AddRemove.js","components/Card.js","components/Main.js","components/CartPanel.js","store/store.js","settings/screenWidth.js","App.js","index.js"],"names":["colors","primaryColor","primaryLightColor","primaryDarkColor","primaryTextColor","greyBackground","lightGreyBackground","baseURL","client","axios","create","itemsAPI","getItems","post","then","response","status","data","console","log","catch","err","message","createAsyncThunk","amount","a","manageSlice","createSlice","name","initialState","sideBarOpened","screenWidth","mobileScreen","items","categories","loading","selectedCategory","reducers","changeSideBarOpened","state","action","payload","setScreenWidth","setMobileScreen","setItems","setCategories","setSelectedCategory","extraReducers","builder","addCase","pending","fulfilled","actions","MenuButtonStyled","styled","div","marginLeft","display","justifyContent","alignItems","width","height","cursor","backgroundColor","borderRadius","MenuButton","onClick","xmlns","fill","viewBox","fillRule","d","HeaderStyled","BrandName","color","marginRight","fontSize","Header","dispatch","useDispatch","useSelector","manage","ItemStyled","selected","padding","flexDirection","Name","textAlign","fontWeight","Item","category","SidebarStyled","props","position","top","bottom","left","transition","overflow","marginTop","ItemsList","margin","Sidebar","map","id","AddRemoveButtonStyled","Button","AddRemoveButton","icon","variant","AddRemoveStyled","Text","border","AddRemove","CardStyled","Container","MyRow","Row","MyCol","Col","Prices","RetailPrice","Tip","Card","item","img","xs","src","alt","title","style","price","priceopt","pricemegaopt","MainStyled","overflowX","Error","MyButton","Main","useState","showNumber","setShowNumber","useEffect","length","index","size","CartPanelStyled","right","Price","CartPanel","store","configureStore","reducer","manageReducer","handleScreenSize","getScreenWidth","window","screen","innerWidth","adjustSidebar","onresize","AppStyled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9d4cf33.chunk.js","sourcesContent":["const colors = {\r\n    primaryColor: \"#3d5afe\",\r\n    primaryLightColor: \"#8187ff\",\r\n    primaryDarkColor: \"#0031ca\",\r\n    primaryTextColor: \"#ffffff\",\r\n    greyBackground: \"#E1E2E1\",\r\n    lightGreyBackground: \"#F5F5F6\",\r\n};\r\n\r\nexport default colors;\r\n","const settings = {\r\n    dev: \"http://localhost:3010/api\",\r\n    demo: \"https://bortik-project.herokuapp.com/api\",\r\n    prod: \"https://bortik-project.herokuapp.com/api\",\r\n};\r\n\r\nconst getBaseURL = () => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n        return settings.dev;\r\n    } else {\r\n        return settings.demo;\r\n    }\r\n    //for production\r\n    // return settings.prod;\r\n};\r\n\r\nconst baseURL = getBaseURL();\r\n\r\nexport default baseURL;\r\n","import axios from \"axios\";\r\nimport baseURL from \"../settings/baseURL\";\r\n\r\nconst client = axios.create({\r\n    baseURL: baseURL,\r\n});\r\n\r\n// export let authClient;\r\n\r\n// export const createAuthClient = (authToken) => {\r\n//     authClient = axios.create({\r\n//         baseURL: baseURL,\r\n//         headers: {\r\n//             Authorization: \"Bearer \" + authToken,\r\n//         },\r\n//     });\r\n// };\r\n\r\nexport default client;\r\n","import client from \"./client\";\r\n\r\nconst getItems = () => {\r\n    return client\r\n        .post(\"/getItems\")\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                return response.data;\r\n            } else {\r\n                console.log(\"error\");\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n};\r\n\r\nconst itemsAPI = {\r\n    getItems,\r\n};\r\n\r\nexport default itemsAPI;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport itemsAPI from \"../api/items\";\r\n\r\nexport const getItems = createAsyncThunk(\"manage/getItems\", async (amount) => {\r\n    const response = await itemsAPI.getItems();\r\n    return response;\r\n});\r\n\r\nconst initialState = {\r\n    sideBarOpened: false,\r\n    screenWidth: 0,\r\n    mobileScreen: true,\r\n    items: null,\r\n    categories: [],\r\n    loading: true,\r\n    selectedCategory: null,\r\n};\r\n\r\nexport const manageSlice = createSlice({\r\n    name: \"manage\",\r\n    initialState,\r\n    reducers: {\r\n        changeSideBarOpened: (state, action) => {\r\n            state.sideBarOpened = action.payload;\r\n        },\r\n        setScreenWidth: (state, action) => {\r\n            state.screenWidth = action.payload;\r\n        },\r\n        setMobileScreen: (state, action) => {\r\n            state.mobileScreen = action.payload;\r\n        },\r\n        setItems: (state, action) => {\r\n            state.items = action.payload;\r\n        },\r\n        setCategories: (state, action) => {\r\n            state.categories = action.payload;\r\n        },\r\n        setSelectedCategory: (state, action) => {\r\n            state.selectedCategory = action.payload;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(getItems.pending, (state) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(getItems.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.items = action.payload.items;\r\n                state.categories = action.payload.categories;\r\n                state.selectedCategory = action.payload.categories[0].name;\r\n                console.log(action.payload);\r\n            });\r\n    },\r\n});\r\n\r\nexport const { changeSideBarOpened, setScreenWidth, setMobileScreen, setSelectedCategory } = manageSlice.actions;\r\nexport default manageSlice.reducer;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst MenuButtonStyled = styled.div({\r\n    marginLeft: \"10px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"42px\",\r\n    height: \"42px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"20px\",\r\n    },\r\n});\r\n\r\nfunction MenuButton({ onClick }) {\r\n    return (\r\n        <MenuButtonStyled onClick={onClick}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"white\" viewBox=\"0 0 16 16\">\r\n                <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\r\n                />\r\n            </svg>\r\n        </MenuButtonStyled>\r\n    );\r\n}\r\n\r\nexport default MenuButton;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"../settings/colors\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { changeSideBarOpened } from \"../store/manage\";\r\nimport MenuButton from \"./MenuButton\";\r\n\r\nconst HeaderStyled = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.primaryColor,\r\n    height: \"50px\",\r\n});\r\n\r\nconst BrandName = styled.div({\r\n    color: \"white\",\r\n    marginRight: \"20px\",\r\n    fontSize: \"20px\",\r\n});\r\n\r\n// const MenuButton = styled.div({\r\n//     backgroundColor: \"white\",\r\n//     height: \"20px\",\r\n//     width: \"20px\",\r\n//     marginLeft: \"20px\",\r\n// });\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch();\r\n    const sideBarOpened = useSelector((state) => state.manage.sideBarOpened);\r\n\r\n    const toggleSidebar = () => {\r\n        if (sideBarOpened) {\r\n            dispatch(changeSideBarOpened(false));\r\n        } else {\r\n            dispatch(changeSideBarOpened(true));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <HeaderStyled>\r\n            <MenuButton onClick={toggleSidebar}></MenuButton>\r\n            <BrandName>Bortik Project</BrandName>\r\n        </HeaderStyled>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSelectedCategory, changeSideBarOpened } from \"../store/manage\";\r\n\r\nconst ItemStyled = styled.div(({ selected }) => {\r\n    return {\r\n        width: \"100%\",\r\n        padding: \"10px 10px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: selected ? \"rgba(0, 0, 0, 0.2)\" : \"\",\r\n        borderRadius: selected ? \"5px\" : \"\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            borderRadius: \"5px\",\r\n        },\r\n    };\r\n});\r\n\r\nconst Name = styled.div({\r\n    textAlign: \"center\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nfunction Item({ category }) {\r\n    const dispatch = useDispatch();\r\n    const mobileScreen = useSelector((state) => state.manage.mobileScreen);\r\n    const selectedCategory = useSelector((state) => state.manage.selectedCategory);\r\n\r\n    const handleSelect = (name) => {\r\n        dispatch(setSelectedCategory(name));\r\n        if (mobileScreen) {\r\n            dispatch(changeSideBarOpened(false));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ItemStyled selected={category.name === selectedCategory} onClick={() => handleSelect(category.name)}>\r\n            <Name>{category.name}</Name>\r\n        </ItemStyled>\r\n    );\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"../settings/colors\";\r\nimport Item from \"./Item\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SidebarStyled = styled.div((props) => {\r\n    return {\r\n        position: \"absolute\",\r\n        top: \"50px\",\r\n        bottom: props.mobileScreen ? \"40px\" : \"0px\",\r\n        backgroundColor: colors.greyBackground,\r\n        width: \"170px\",\r\n        left: props.sideBarOpened ? \"0px\" : \"-170px\",\r\n        transition: \"left 0.5s\",\r\n        overflow: \"auto\",\r\n    };\r\n});\r\n\r\nconst Header = styled.div({\r\n    marginTop: \"10px\",\r\n    textAlign: \"center\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nconst ItemsList = styled.div({\r\n    margin: \"10px 10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n});\r\n\r\nfunction Sidebar() {\r\n    const sideBarOpened = useSelector((state) => state.manage.sideBarOpened);\r\n    const mobileScreen = useSelector((state) => state.manage.mobileScreen);\r\n    const categories = useSelector((state) => state.manage.categories);\r\n\r\n    return (\r\n        <SidebarStyled sideBarOpened={sideBarOpened} mobileScreen={mobileScreen}>\r\n            <Header>Каталог</Header>\r\n            <ItemsList>{categories ? categories.map((category) => <Item key={category.id} category={category} />) : null}</ItemsList>\r\n        </SidebarStyled>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst AddRemoveButtonStyled = styled(Button)`\r\n    width: 36px;\r\n    height: 36px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0;\r\n    &:focus {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n`;\r\n\r\nfunction AddRemoveButton({ icon }) {\r\n    if (icon === \"plus\") {\r\n        return (\r\n            <AddRemoveButtonStyled variant=\"primary\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                </svg>\r\n            </AddRemoveButtonStyled>\r\n        );\r\n    }\r\n    if (icon === \"minus\") {\r\n        return (\r\n            <AddRemoveButtonStyled variant=\"primary\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n                    <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\" />\r\n                </svg>\r\n            </AddRemoveButtonStyled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddRemoveButton;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport AddRemoveButton from \"./AddRemoveButton\";\r\n\r\nconst AddRemoveStyled = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginRight: \"10px\",\r\n    marginLeft: \"10px\",\r\n});\r\n\r\nconst Text = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    border: \"1px solid black\",\r\n    margin: \"auto 10px\",\r\n    padding: \"7px\",\r\n    borderRadius: \"3px\",\r\n    fontSize: \"14px\",\r\n});\r\n\r\nfunction AddRemove() {\r\n    return (\r\n        <AddRemoveStyled>\r\n            <AddRemoveButton icon=\"minus\" />\r\n            <Text>{1000}</Text>\r\n            <AddRemoveButton icon=\"plus\" />\r\n        </AddRemoveStyled>\r\n    );\r\n}\r\n\r\nexport default AddRemove;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport AddRemove from \"./AddRemove\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst CardStyled = styled(Container)`\r\n    background-color: white;\r\n    margin: 10px 10px;\r\n    padding: 10px 10px;\r\n    max-width: 1200px;\r\n`;\r\n\r\nconst MyRow = styled(Row)`\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst MyCol = styled(Col)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    padding: 10px 10px;\r\n    text-align: center;\r\n    min-width: 250px;\r\n`;\r\n\r\nconst Prices = styled(Col)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    padding: 10px 10px;\r\n    text-align: center;\r\n    min-width: 250px;\r\n`;\r\n\r\nconst RetailPrice = styled.div({\r\n    backgroundColor: \"#69F0AE\",\r\n    padding: \"2px 5px\",\r\n    borderRadius: \"3px\",\r\n});\r\n\r\nconst Tip = styled.div({\r\n    fontSize: \"12px\",\r\n});\r\n\r\nfunction Card({ item }) {\r\n    return (\r\n        <CardStyled>\r\n            <MyRow>\r\n                {item.img ? (\r\n                    <Col xs=\"auto\">\r\n                        <img src={item.img} alt={item.title} width=\"100\" height=\"100\"></img>\r\n                    </Col>\r\n                ) : null}\r\n                <MyCol style={{ fontWeight: \"500\" }}>{item.title}</MyCol>\r\n                <Prices>\r\n                    <RetailPrice>Цена с НДС {item.price} руб</RetailPrice>\r\n                    <div>Цена без НДС {item.priceopt} руб</div>\r\n                    <div>\r\n                        <div>Цена без НДС {item.pricemegaopt} руб*</div>\r\n                        <Tip>*(при общей сумме заказа от 250 руб)</Tip>\r\n                    </div>\r\n                </Prices>\r\n                <MyCol xs=\"auto\">\r\n                    <AddRemove />\r\n                </MyCol>\r\n            </MyRow>\r\n        </CardStyled>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Card from \"./Card\";\r\nimport colors from \"../settings/colors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst MainStyled = styled.div(({ sideBarOpened, mobileScreen }) => {\r\n    const getLeft = () => {\r\n        if (mobileScreen) {\r\n            return \"0\";\r\n        } else {\r\n            return sideBarOpened ? \"170px\" : \"0\";\r\n        }\r\n    };\r\n\r\n    return {\r\n        position: \"absolute\",\r\n        display: \"flex\",\r\n        left: getLeft(),\r\n        top: \"50px\",\r\n        bottom: mobileScreen ? \"40px\" : \"80px\",\r\n        overflow: \"auto\",\r\n        overflowX: \"hidden\",\r\n        flexDirection: \"column\",\r\n        width: mobileScreen ? \"100%\" : \"calc(100% - 170px)\",\r\n        alignItems: \"center\",\r\n        backgroundColor: colors.lightGreyBackground,\r\n        padding: \"10px 10px\",\r\n    };\r\n});\r\n\r\nconst Error = styled.div({\r\n    margin: \"30px 10px\",\r\n});\r\n\r\nconst MyButton = styled(Button)`\r\n    margin-top: 20px;\r\n    margin-bottom: 50px;\r\n    &:focus {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n`;\r\n\r\nfunction Main() {\r\n    const [showNumber, setShowNumber] = useState(20);\r\n    const items = useSelector((state) => state.manage.items);\r\n    const sideBarOpened = useSelector((state) => state.manage.sideBarOpened);\r\n    const mobileScreen = useSelector((state) => state.manage.mobileScreen);\r\n    const selectedCategory = useSelector((state) => state.manage.selectedCategory);\r\n\r\n    useEffect(() => {\r\n        setShowNumber(20);\r\n    }, [items, selectedCategory]);\r\n\r\n    const showMore = () => {\r\n        setShowNumber(showNumber + 20);\r\n    };\r\n\r\n    if (items && selectedCategory) {\r\n        return (\r\n            <MainStyled sideBarOpened={sideBarOpened} mobileScreen={mobileScreen}>\r\n                {items[selectedCategory].length > 0 ? (\r\n                    items[selectedCategory].map((item, index) => (index <= showNumber ? <Card item={item} key={item.id} /> : null))\r\n                ) : (\r\n                    <Error>Нет товаров в данной категории</Error>\r\n                )}\r\n                {showNumber < items[selectedCategory].length ? (\r\n                    <MyButton variant=\"primary\" size={mobileScreen ? \"sm\" : \"\"} onClick={showMore}>\r\n                        Показать еще\r\n                    </MyButton>\r\n                ) : null}\r\n            </MainStyled>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"../settings/colors\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CartPanelStyled = styled.div(({ sideBarOpened, mobileScreen }) => {\r\n    const getLeft = () => {\r\n        if (mobileScreen) {\r\n            return \"0\";\r\n        } else {\r\n            return sideBarOpened ? \"170px\" : \"0\";\r\n        }\r\n    };\r\n\r\n    return {\r\n        position: \"absolute\",\r\n        bottom: \"0\",\r\n        height: mobileScreen ? \"40px\" : \"80px\",\r\n        backgroundColor: colors.lightGreyBackground,\r\n        left: getLeft(),\r\n        transition: \"left 0.5s\",\r\n        right: \"0\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    };\r\n});\r\n\r\nconst MyButton = styled(Button)`\r\n    margin-left: 50px;\r\n    &:focus {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n`;\r\n\r\nconst Price = styled.div((props) => {\r\n    return {\r\n        textAlign: \"center\",\r\n        fontSize: props.mobileScreen ? \"18px\" : \"25px\",\r\n        fontWeight: \"600\",\r\n        marginRight: \"30px\",\r\n    };\r\n});\r\n\r\nfunction CartPanel() {\r\n    const sideBarOpened = useSelector((state) => state.manage.sideBarOpened);\r\n    const mobileScreen = useSelector((state) => state.manage.mobileScreen);\r\n\r\n    return (\r\n        <CartPanelStyled sideBarOpened={sideBarOpened} mobileScreen={mobileScreen}>\r\n            <MyButton variant=\"primary\" size={mobileScreen ? \"sm\" : \"\"}>\r\n                Оформить\r\n            </MyButton>\r\n            <Price mobileScreen={mobileScreen}>{25.5} руб</Price>\r\n        </CartPanelStyled>\r\n    );\r\n}\r\n\r\nexport default CartPanel;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport manageReducer from \"./manage\";\n\nexport const store = configureStore({\n    reducer: {\n        manage: manageReducer,\n    },\n});\n","import { store } from \"../store/store\";\r\nimport { setScreenWidth, changeSideBarOpened, setMobileScreen } from \"../store/manage\";\r\n\r\nconst handleScreenSize = () => {\r\n    const getScreenWidth = () => {\r\n        let width;\r\n        if (window.screen.width < window.innerWidth) {\r\n            // for moble browsers\r\n            width = window.screen.width;\r\n        } else {\r\n            width = window.innerWidth;\r\n        }\r\n        return width;\r\n    };\r\n    const screenWidth = getScreenWidth();\r\n    store.dispatch(setScreenWidth(screenWidth));\r\n\r\n    const adjustSidebar = () => {\r\n        const width = getScreenWidth();\r\n        if (width < 650) {\r\n            store.dispatch(changeSideBarOpened(false));\r\n            store.dispatch(setMobileScreen(true));\r\n        } else {\r\n            store.dispatch(changeSideBarOpened(true));\r\n            store.dispatch(setMobileScreen(false));\r\n        }\r\n    };\r\n    adjustSidebar();\r\n\r\n    window.onresize = () => {\r\n        adjustSidebar();\r\n        const screenWidth = getScreenWidth();\r\n        store.dispatch(setScreenWidth(screenWidth));\r\n    };\r\n};\r\n\r\nexport default handleScreenSize;\r\n","import React, { useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport Main from \"./components/Main\";\nimport CartPanel from \"./components/CartPanel\";\nimport styled from \"@emotion/styled\";\nimport handleScreenSize from \"./settings/screenWidth\";\nimport { getItems } from \"./store/manage\";\nimport { useDispatch } from \"react-redux\";\n\nconst AppStyled = styled.div({\n    height: \"100%\",\n});\n\nfunction App() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        handleScreenSize();\n        dispatch(getItems());\n    }, []);\n    return (\n        <AppStyled>\n            <Header />\n            <Main />\n            <Sidebar />\n            <CartPanel />\n        </AppStyled>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}