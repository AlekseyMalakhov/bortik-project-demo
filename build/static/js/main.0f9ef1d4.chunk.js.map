{"version":3,"sources":["settings/colors.js","settings/baseURL.js","api/client.js","api/items.js","api/user.js","utilities/calculate.js","store/manage.js","components/MenuButton.js","components/HeaderBackButton.js","components/ThreeDotsButton.js","components/Search.js","components/Header.js","store/store.js","settings/screenWidth.js","components/CircleCategory.js","components/Item.js","components/Sidebar.js","components/AddRemoveButton.js","components/AddRemove.js","components/IconCheck.js","components/ShowPic.js","components/Card.js","components/Main.js","settings/priceTypes.js","components/SelectPrice.js","components/CleanCartButton.js","components/AskCleanCartModal.js","components/CartPanel.js","views/Home.js","components/TableRow.js","components/CartTable.js","components/FormInput.js","components/FormCheckBoxRadio.js","components/CartSentModal.js","components/CartForm.js","views/Cart.js","views/NoMatch.js","components/Loading.js","views/About.js","views/Login.js","components/AccountDataTable.js","components/HistoryTableRow.js","components/HistoryTableBlock.js","components/HistoryTable.js","views/Account.js","components/AccountCreatedModal.js","views/Register.js","components/ForgottenPasswordSentModal.js","views/ForgotPassword.js","components/AccountEditedModal.js","components/FormCheckBoxSwitch.js","views/EditAccount.js","App.js","index.js"],"names":["colors","primaryColor","primaryLightColor","primaryDarkColor","primaryTextColor","greyBackground","lightGreyBackground","baseURL","client","axios","create","itemsAPI","getItems","post","then","response","status","data","console","log","catch","err","message","sendCart","userAPI","createAccount","error","login","forgotPassword","email","editAccount","userId","put","getHistory","userID","calculateSum","cart","priceType","sum","i","length","price","priceopt","pricemegaopt","number","Number","toFixed","createAsyncThunk","a","manageSlice","createSlice","name","initialState","sideBarOpened","screenWidth","mobileScreen","items","categories","loading","selectedCategory","cartSum","search","searchInput","user","history","reducers","changeSideBarOpened","state","action","payload","setScreenWidth","setMobileScreen","setItems","setCategories","setSelectedCategory","addItemToCart","newCart","index","findIndex","item","id","push","localStorage","setItem","JSON","stringify","removeItemFromCart","filter","cleanCart","setPriceType","setCartSum","setLoading","setSearch","setSearchInput","arr","map","word","toLowerCase","setUser","extraReducers","builder","addCase","pending","fulfilled","getItem","parse","actions","MenuButtonStyled","styled","div","marginLeft","display","justifyContent","alignItems","width","height","cursor","backgroundColor","borderRadius","MenuButton","dispatch","useDispatch","useSelector","manage","onClick","xmlns","fill","viewBox","fillRule","d","HeaderBackButtonStyled","HeaderBackButton","navigate","useNavigate","ThreeDotsButtonStyled","marginRight","content","ThreeDotsButton","ref","props","React","forwardRef","SearchStyled","position","SearchInput","Form","Control","paddingRight","SearchIcon","focus","value","left","top","visibility","CloseButton","minWidth","right","Search","show","useState","setFocus","setValue","onFocus","onBlur","onChange","e","target","split","onKeyUp","key","blur","HeaderStyled","BrandName","color","fontSize","Header","location","useLocation","pathname","Dropdown","align","Toggle","as","Menu","Item","Divider","Fragment","style","fontWeight","removeItem","store","configureStore","reducer","manageReducer","handleScreenSize","getScreenWidth","window","screen","innerWidth","adjustSidebar","onresize","CircleCategoryStyled","CircleCategory","numberInCart","ItemStyled","selected","padding","flexDirection","empty","Name","textAlign","category","setNumberInCart","useEffect","SidebarStyled","transition","overflow","overflowX","marginTop","ItemsList","margin","Sidebar","searchedCategories","setSearchedCategories","find","title","includes","AddRemoveButtonStyled","Button","AddRemoveButton","icon","variant","AddRemoveStyled","MyInput","AddRemove","inCart","setNumber","changeNumber","newNumber","obj","text","onlyNumbers","replace","parseInt","allowOnlyNumbers","select","onKeyDown","inputMode","IconCheckStyled","IconCheck","ShowPic","fullscreen","onHide","Modal","closeButton","Body","src","img","alt","maxWidth","CardStyled","Container","MyRow","Row","MyCol","Col","Prices","RetailPrice","Tip","Card","setInCart","showImage","setShowImage","includedInCart","itemInCart","xs","sm","md","MainStyled","marginBottom","Error","MyButton","Main","showNumber","setShowNumber","searchedItems","setSearchedItems","createRef","current","scroll","size","priceTypes","SelectPriceStyled","SelectPrice","DropdownButton","drop","type","eventKey","handlePriceType","CleanCartButtonStyled","bottom","CleanCartButton","AskCleanCartModal","onClean","otherProps","centered","Footer","CartPanelStyled","outline","boxShadow","Price","PricePanel","CartPanel","showAsk","setShowAsk","disabled","MyContainer","Home","TableRow","CartTableStyled","EmptyCart","CartTable","Table","striped","bordered","hover","colSpan","FormInput","label","useFormikContext","setFieldTouched","setFieldValue","errors","touched","values","Group","className","controlId","Label","isValid","isInvalid","Feedback","CheckStyled","Check","FormCheckBoxRadio","checked","CartSentModalStyled","CartSentModal","showDone","orderID","CartFormStyled","CheckGroup","ButtonGroup","payment_methods","delivery_methods","validationSchema","Yup","shape","required","phone","CartForm","setShowDone","setEmail","setOrderID","calcSum","getPrice","cancel","initialValues","payment_method","delivery","address","comment","enableReinitialize","onSubmit","article","customer","date","Date","now","handleSubmit","noValidate","placeholder","method","backdrop","keyboard","Title","CartStyled","Cart","NoMatchStyled","NoMatch","to","LoadingStyled","Loading","background","shapeRendering","preserveAspectRatio","cx","cy","stroke","strokeWidth","r","strokeDasharray","attributeName","repeatCount","dur","keyTimes","AboutStyled","About","LoginStyled","password","Login","setError","AccountDataTableStyled","AccountDataTable","HistoryTableRow","HistoryTableBlockStyled","borderBottom","paddingBottom","createDate","dateString","day","getDate","month","getMonth","year","getFullYear","h","getHours","m","getMinutes","HistoryTableBlock","order","price_type","HistoryTableStyled","HistoryTable","AccountStyled","Account","AccountCreatedModal","newUser","repeatPassword","RegisterStyled","Register","done","setDone","setNewUser","ForgottenPasswordSentModal","ForgotPasswordStyled","ForgotPassword","AccountEditedModal","updatedUser","FormCheckBoxSwitch","handleChange","EditAccountStyled","PasswordGroup","changePassword","newPassword","when","is","repeatNewPassword","EditAccount","setUpdatedUser","AppStyled","App","userStr","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f9ef1d4.chunk.js","sourcesContent":["const colors = {\r\n    primaryColor: \"#3d5afe\",\r\n    primaryLightColor: \"#8187ff\",\r\n    primaryDarkColor: \"#0031ca\",\r\n    primaryTextColor: \"#ffffff\",\r\n    greyBackground: \"#E1E2E1\",\r\n    lightGreyBackground: \"#F5F5F6\",\r\n};\r\n\r\nexport default colors;\r\n","const settings = {\r\n    dev: \"http://localhost:3010/api\",\r\n    demo: \"https://bortik-project.herokuapp.com/api\",\r\n    prod: \"https://bortik-project.herokuapp.com/api\",\r\n};\r\n\r\nconst getBaseURL = () => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n        return settings.dev;\r\n    } else {\r\n        return settings.demo;\r\n    }\r\n    //for production\r\n    // return settings.prod;\r\n};\r\n\r\nconst baseURL = getBaseURL();\r\n\r\nexport default baseURL;\r\n","import axios from \"axios\";\r\nimport baseURL from \"../settings/baseURL\";\r\n\r\nconst client = axios.create({\r\n    baseURL: baseURL,\r\n});\r\n\r\n// export let authClient;\r\n\r\n// export const createAuthClient = (authToken) => {\r\n//     authClient = axios.create({\r\n//         baseURL: baseURL,\r\n//         headers: {\r\n//             Authorization: \"Bearer \" + authToken,\r\n//         },\r\n//     });\r\n// };\r\n\r\nexport default client;\r\n","import client from \"./client\";\r\n\r\nconst getItems = () => {\r\n    return client\r\n        .post(\"/getItems\")\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                return response.data;\r\n            } else {\r\n                console.log(\"error\");\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n};\r\n\r\nconst sendCart = (data) => {\r\n    return client\r\n        .post(\"/sendCart\", data)\r\n        .then((response) => {\r\n            return response;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n};\r\n\r\nconst itemsAPI = {\r\n    getItems,\r\n    sendCart,\r\n};\r\n\r\nexport default itemsAPI;\r\n","import client from \"./client\";\r\n\r\nconst createAccount = (data) => {\r\n    return client\r\n        .post(\"/createAccount\", data)\r\n        .then((response) => {\r\n            return response;\r\n        })\r\n        .catch((error) => error.response);\r\n};\r\n\r\nconst editAccount = (data, userId) => {\r\n    return client\r\n        .put(\"/editAccount/\" + userId, data)\r\n        .then((response) => {\r\n            return response;\r\n        })\r\n        .catch((error) => error.response);\r\n};\r\n\r\nconst login = (data) => {\r\n    return client\r\n        .post(\"/login\", data)\r\n        .then((response) => {\r\n            return response;\r\n        })\r\n        .catch((error) => error.response);\r\n};\r\n\r\nconst forgotPassword = (email) => {\r\n    return client\r\n        .post(\"/forgotPassword\", email)\r\n        .then((response) => {\r\n            return response;\r\n        })\r\n        .catch((error) => error.response);\r\n};\r\n\r\nconst getHistory = (userID) => {\r\n    return client\r\n        .post(\"/getHistory\", userID)\r\n        .then((response) => {\r\n            return response.data;\r\n        })\r\n        .catch((error) => error.response);\r\n};\r\n\r\nconst userAPI = {\r\n    createAccount,\r\n    login,\r\n    forgotPassword,\r\n    editAccount,\r\n    getHistory,\r\n};\r\n\r\nexport default userAPI;\r\n","export const calculateSum = (cart, priceType) => {\r\n    let sum = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n        let price;\r\n        if (priceType === \"с НДС\") {\r\n            price = cart[i].price;\r\n        }\r\n        if (priceType === \"без НДС\") {\r\n            price = cart[i].priceopt;\r\n        }\r\n        if (priceType === \"без НДС (от 250р)\") {\r\n            price = cart[i].pricemegaopt;\r\n        }\r\n        sum = sum + price * cart[i].number;\r\n    }\r\n    return Number(sum.toFixed(2));\r\n};\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport itemsAPI from \"../api/items\";\r\nimport userAPI from \"../api/user\";\r\nimport { calculateSum } from \"../utilities/calculate\";\r\n\r\nexport const getItems = createAsyncThunk(\"manage/getItems\", async () => {\r\n    const response = await itemsAPI.getItems();\r\n    return response;\r\n});\r\n\r\nexport const getHistory = createAsyncThunk(\"manage/getHistory\", async (userID) => {\r\n    const response = await userAPI.getHistory({ userID });\r\n    return response;\r\n});\r\n\r\nconst initialState = {\r\n    sideBarOpened: true,\r\n    screenWidth: 0,\r\n    mobileScreen: true,\r\n    items: null,\r\n    categories: [],\r\n    loading: true,\r\n    selectedCategory: null,\r\n    cart: [],\r\n    priceType: null,\r\n    cartSum: 0,\r\n    search: false,\r\n    searchInput: [],\r\n    user: null,\r\n    history: [],\r\n};\r\n\r\nexport const manageSlice = createSlice({\r\n    name: \"manage\",\r\n    initialState,\r\n    reducers: {\r\n        changeSideBarOpened: (state, action) => {\r\n            state.sideBarOpened = action.payload;\r\n        },\r\n        setScreenWidth: (state, action) => {\r\n            state.screenWidth = action.payload;\r\n        },\r\n        setMobileScreen: (state, action) => {\r\n            state.mobileScreen = action.payload;\r\n        },\r\n        setItems: (state, action) => {\r\n            state.items = action.payload;\r\n        },\r\n        setCategories: (state, action) => {\r\n            state.categories = action.payload;\r\n        },\r\n        setSelectedCategory: (state, action) => {\r\n            state.selectedCategory = action.payload;\r\n        },\r\n        addItemToCart: (state, action) => {\r\n            const newCart = [...state.cart];\r\n            const index = newCart.findIndex((item) => item.id === action.payload.id);\r\n            if (index !== -1) {\r\n                newCart[index] = action.payload;\r\n            } else {\r\n                newCart.push(action.payload);\r\n            }\r\n            state.cart = newCart;\r\n            localStorage.setItem(\"cart\", JSON.stringify(newCart));\r\n        },\r\n        removeItemFromCart: (state, action) => {\r\n            const newCart = [...state.cart];\r\n            const index = newCart.findIndex((item) => item.id === action.payload.id);\r\n            if (index !== -1) {\r\n                const cart = newCart.filter((item) => item.id !== action.payload.id);\r\n                state.cart = cart;\r\n                localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n            }\r\n        },\r\n        cleanCart: (state) => {\r\n            state.cart = [];\r\n            localStorage.setItem(\"cart\", JSON.stringify([]));\r\n            state.cartSum = 0;\r\n        },\r\n        setPriceType: (state, action) => {\r\n            state.priceType = action.payload;\r\n            localStorage.setItem(\"price_type\", action.payload);\r\n        },\r\n        setCartSum: (state, action) => {\r\n            state.cartSum = action.payload;\r\n        },\r\n        setLoading: (state, action) => {\r\n            state.loading = action.payload;\r\n        },\r\n        setSearch: (state, action) => {\r\n            state.search = action.payload;\r\n        },\r\n        setSearchInput: (state, action) => {\r\n            const arr = action.payload.map((word) => word.toLowerCase());\r\n            state.searchInput = arr;\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(getItems.pending, (state) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(getItems.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                if (action.payload) {\r\n                    state.items = action.payload.items;\r\n                    state.categories = action.payload.categories;\r\n                    state.selectedCategory = action.payload.categories[0].name;\r\n                    const cart = localStorage.getItem(\"cart\");\r\n                    if (cart) {\r\n                        const data = JSON.parse(cart);\r\n                        state.cart = data;\r\n                        const sum = calculateSum(data, state.priceType);\r\n                        state.cartSum = sum;\r\n                    }\r\n                }\r\n                console.log(action.payload);\r\n            });\r\n        builder\r\n            .addCase(getHistory.pending, (state) => {\r\n                state.loading = true;\r\n            })\r\n            .addCase(getHistory.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                if (action.payload) {\r\n                    state.history = action.payload;\r\n                }\r\n            });\r\n    },\r\n});\r\n\r\nexport const {\r\n    changeSideBarOpened,\r\n    setScreenWidth,\r\n    setMobileScreen,\r\n    setSelectedCategory,\r\n    addItemToCart,\r\n    removeItemFromCart,\r\n    setPriceType,\r\n    setCartSum,\r\n    setLoading,\r\n    cleanCart,\r\n    setSearch,\r\n    setSearchInput,\r\n    setUser,\r\n} = manageSlice.actions;\r\nexport default manageSlice.reducer;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { changeSideBarOpened } from \"../store/manage\";\r\n\r\nconst MenuButtonStyled = styled.div({\r\n    marginLeft: \"10px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"42px\",\r\n    height: \"42px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"20px\",\r\n    },\r\n});\r\n\r\nfunction MenuButton() {\r\n    const dispatch = useDispatch();\r\n    const sideBarOpened = useSelector((state) => state.manage.sideBarOpened);\r\n\r\n    const toggleSidebar = () => {\r\n        if (sideBarOpened) {\r\n            dispatch(changeSideBarOpened(false));\r\n        } else {\r\n            dispatch(changeSideBarOpened(true));\r\n        }\r\n    };\r\n    return (\r\n        <MenuButtonStyled onClick={toggleSidebar}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"white\" viewBox=\"0 0 16 16\">\r\n                <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\r\n                />\r\n            </svg>\r\n        </MenuButtonStyled>\r\n    );\r\n}\r\n\r\nexport default MenuButton;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst HeaderBackButtonStyled = styled.div({\r\n    marginLeft: \"10px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"42px\",\r\n    height: \"42px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"20px\",\r\n    },\r\n});\r\n\r\nfunction HeaderBackButton() {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <HeaderBackButtonStyled onClick={() => navigate(\"/\")}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"white\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.5-.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\" />\r\n            </svg>\r\n        </HeaderBackButtonStyled>\r\n    );\r\n}\r\n\r\nexport default HeaderBackButton;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ThreeDotsButtonStyled = styled.div({\r\n    marginRight: \"10px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"42px\",\r\n    height: \"42px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"20px\",\r\n    },\r\n    \"&:after\": {\r\n        content: \"none\",\r\n    },\r\n});\r\n\r\nfunction ThreeDotsButton({ ...props }, ref) {\r\n    return (\r\n        <ThreeDotsButtonStyled {...props} ref={ref}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"white\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n            </svg>\r\n        </ThreeDotsButtonStyled>\r\n    );\r\n}\r\n\r\nexport default React.forwardRef(ThreeDotsButton);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSearchInput, setSearch } from \"../store/manage\";\r\n\r\nconst SearchStyled = styled.div({\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n});\r\n\r\nconst SearchInput = styled(Form.Control)({\r\n    position: \"relative\",\r\n    paddingRight: \"35px\",\r\n});\r\n\r\nconst SearchIcon = styled.div(({ focus, value }) => {\r\n    return {\r\n        position: \"absolute\",\r\n        width: \"16px\",\r\n        left: \"10px\",\r\n        top: \"7px\",\r\n        visibility: focus || value ? \"hidden\" : \"visible\",\r\n    };\r\n});\r\n\r\nconst CloseButton = styled.div({\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minWidth: \"26px\",\r\n    width: \"26px\",\r\n    height: \"26px\",\r\n    top: \"7px\",\r\n    right: \"8px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"13px\",\r\n    },\r\n});\r\n\r\nfunction Search({ show }) {\r\n    const dispatch = useDispatch();\r\n    const [focus, setFocus] = useState(false);\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleInput = (e) => {\r\n        setValue(e.target.value);\r\n        const arr = e.target.value.split(\" \");\r\n        dispatch(setSearchInput(arr));\r\n    };\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.target.blur();\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setValue(\"\");\r\n        dispatch(setSearchInput([]));\r\n        dispatch(setSearch(false));\r\n    };\r\n    if (show) {\r\n        return (\r\n            <SearchStyled>\r\n                <SearchInput\r\n                    onFocus={() => setFocus(true)}\r\n                    onBlur={() => setFocus(false)}\r\n                    onChange={handleInput}\r\n                    value={value}\r\n                    onKeyUp={handlePressEnter}\r\n                />\r\n                <SearchIcon focus={focus} value={value}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"grey\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n                    </svg>\r\n                </SearchIcon>\r\n                <CloseButton onClick={handleClose}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"black\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n                        <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n                    </svg>\r\n                </CloseButton>\r\n            </SearchStyled>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"../settings/colors\";\r\nimport MenuButton from \"./MenuButton\";\r\nimport { useLocation, useNavigate } from \"react-router\";\r\nimport HeaderBackButton from \"./HeaderBackButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport ThreeDotsButton from \"./ThreeDotsButton\";\r\nimport Search from \"./Search\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSearch, setUser } from \"../store/manage\";\r\n\r\nconst HeaderStyled = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.primaryColor,\r\n    height: \"50px\",\r\n});\r\n\r\nconst BrandName = styled.div({\r\n    color: \"white\",\r\n    fontSize: \"20px\",\r\n    cursor: \"pointer\",\r\n});\r\n\r\nfunction Header() {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const search = useSelector((state) => state.manage.search);\r\n    const mobileScreen = useSelector((state) => state.manage.mobileScreen);\r\n    const user = useSelector((state) => state.manage.user);\r\n\r\n    const logout = () => {\r\n        dispatch(setUser(null));\r\n        localStorage.removeItem(\"user\");\r\n        navigate(\"/\");\r\n    };\r\n\r\n    const toggleSearch = () => {\r\n        dispatch(setSearch(true));\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <HeaderStyled>\r\n            {location.pathname === \"/\" ? <MenuButton /> : <HeaderBackButton />}\r\n            {mobileScreen && search ? null : <BrandName onClick={() => navigate(\"/\")}>Bortik Project</BrandName>}\r\n            <Search show={search && location.pathname === \"/\"} />\r\n            <Dropdown align=\"end\">\r\n                <Dropdown.Toggle as={ThreeDotsButton} id=\"dropdown-basic\" />\r\n                <Dropdown.Menu>\r\n                    {location.pathname !== \"/\" ? <Dropdown.Item onClick={() => navigate(\"/\")}>На главную</Dropdown.Item> : null}\r\n                    <Dropdown.Item onClick={toggleSearch}>Поиск</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => navigate(\"/about\")}>О компании</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    {user ? (\r\n                        <React.Fragment>\r\n                            <Dropdown.Item onClick={() => navigate(\"/account\")} style={{ fontWeight: 500 }}>\r\n                                {user.name}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={logout}>Выход</Dropdown.Item>\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <Dropdown.Item onClick={() => navigate(\"/login\")}>Вход в личный кабинет</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => navigate(\"/register\")}>Регистрация</Dropdown.Item>\r\n                        </React.Fragment>\r\n                    )}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </HeaderStyled>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport manageReducer from \"./manage\";\n\nexport const store = configureStore({\n    reducer: {\n        manage: manageReducer,\n    },\n});\n","import { store } from \"../store/store\";\r\nimport { setScreenWidth, setMobileScreen } from \"../store/manage\";\r\n\r\nconst handleScreenSize = () => {\r\n    const getScreenWidth = () => {\r\n        let width;\r\n        if (window.screen.width < window.innerWidth) {\r\n            // for moble browsers\r\n            width = window.screen.width;\r\n        } else {\r\n            width = window.innerWidth;\r\n        }\r\n        return width;\r\n    };\r\n    const screenWidth = getScreenWidth();\r\n    store.dispatch(setScreenWidth(screenWidth));\r\n\r\n    const adjustSidebar = () => {\r\n        const width = getScreenWidth();\r\n        if (width < 650) {\r\n            store.dispatch(setMobileScreen(true));\r\n        } else {\r\n            store.dispatch(setMobileScreen(false));\r\n        }\r\n    };\r\n    adjustSidebar();\r\n\r\n    window.onresize = () => {\r\n        adjustSidebar();\r\n        const screenWidth = getScreenWidth();\r\n        store.dispatch(setScreenWidth(screenWidth));\r\n    };\r\n};\r\n\r\nexport default handleScreenSize;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst CircleCategoryStyled = styled.div({\r\n    height: \"14px\",\r\n    width: \"14px\",\r\n    borderRadius: \"7px\",\r\n    backgroundColor: \"yellow\",\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"0px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: \"10px\",\r\n});\r\n\r\nfunction CircleCategory({ numberInCart }) {\r\n    return <CircleCategoryStyled>{numberInCart}</CircleCategoryStyled>;\r\n}\r\n\r\nexport default CircleCategory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSelectedCategory } from \"../store/manage\";\r\nimport CircleCategory from \"./CircleCategory\";\r\n\r\nconst ItemStyled = styled.div(({ selected, empty }) => {\r\n    return {\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        padding: \"10px 10px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: selected ? \"rgba(0, 0, 0, 0.2)\" : \"\",\r\n        borderRadius: selected ? \"5px\" : \"\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            borderRadius: \"5px\",\r\n        },\r\n        color: empty ? \"grey\" : \"rgb(33, 37, 41)\",\r\n    };\r\n});\r\n\r\nconst Name = styled.div({\r\n    textAlign: \"center\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nfunction Item({ category }) {\r\n    const dispatch = useDispatch();\r\n    const mobileScreen = useSelector((state) => state.manage.mobileScreen);\r\n    const selectedCategory = useSelector((state) => state.manage.selectedCategory);\r\n    const cart = useSelector((state) => state.manage.cart);\r\n    const items = useSelector((state) => state.manage.items);\r\n\r\n    const [numberInCart, setNumberInCart] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const arr = cart.filter((item) => item.category === category.name);\r\n        setNumberInCart(arr.length);\r\n    }, [cart]);\r\n\r\n    const handleSelect = (name) => {\r\n        dispatch(setSelectedCategory(name));\r\n        if (mobileScreen) {\r\n            //dispatch(changeSideBarOpened(false));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ItemStyled\r\n            selected={category.name === selectedCategory}\r\n            onClick={() => handleSelect(category.name)}\r\n            empty={items[category.name].length === 0}\r\n        >\r\n            <Name>{category.name}</Name>\r\n            {numberInCart > 0 ? <CircleCategory numberInCart={numberInCart} /> : null}\r\n        </ItemStyled>\r\n    );\r\n}\r\n\r\nexport default Item;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport colors from \"../settings/colors\";\r\nimport Item from \"./Item\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSelectedCategory } from \"../store/manage\";\r\n\r\nconst SidebarStyled = styled.div((props) => {\r\n    return {\r\n        backgroundColor: colors.greyBackground,\r\n        width: \"170px\",\r\n        minWidth: \"170px\",\r\n        marginLeft: props.sideBarOpened ? \"0px\" : \"-170px\",\r\n        transition: \"margin-left 0.5s\",\r\n        overflow: \"auto\",\r\n        overflowX: \"hidden\",\r\n    };\r\n});\r\n\r\nconst Header = styled.div({\r\n    marginTop: \"10px\",\r\n    textAlign: \"center\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nconst ItemsList = styled.div({\r\n    margin: \"10px 10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n});\r\n\r\nfunction Sidebar() {\r\n    const dispatch = useDispatch();\r\n    const sideBarOpened = useSelector((state) => state.manage.sideBarOpened);\r\n    const categories = useSelector((state) => state.manage.categories);\r\n    const searchInput = useSelector((state) => state.manage.searchInput);\r\n    const search = useSelector((state) => state.manage.search);\r\n    const items = useSelector((state) => state.manage.items);\r\n    const selectedCategory = useSelector((state) => state.manage.selectedCategory);\r\n\r\n    const [searchedCategories, setSearchedCategories] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (search && searchInput.length > 0) {\r\n            const arr = categories.filter((category) => {\r\n                return items[category.name].find((item) => {\r\n                    for (let i = 0; i < searchInput.length; i++) {\r\n                        if (item.title.toLowerCase().includes(searchInput[i])) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            });\r\n            setSearchedCategories(arr);\r\n            const selectedCat = arr.find((category) => category.name === selectedCategory);\r\n            if (!selectedCat && arr.length > 0) {\r\n                dispatch(setSelectedCategory(arr[0].name));\r\n            }\r\n        } else {\r\n            setSearchedCategories(categories);\r\n        }\r\n    }, [categories, search, searchInput]);\r\n\r\n    return (\r\n        <SidebarStyled sideBarOpened={sideBarOpened}>\r\n            <Header>Каталог</Header>\r\n            <ItemsList>{searchedCategories ? searchedCategories.map((category) => <Item key={category.id} category={category} />) : null}</ItemsList>\r\n        </SidebarStyled>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst AddRemoveButtonStyled = styled(Button)`\r\n    width: 36px;\r\n    height: 36px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0;\r\n    &:focus {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n`;\r\n\r\nfunction AddRemoveButton({ icon, onClick }) {\r\n    if (icon === \"plus\") {\r\n        return (\r\n            <AddRemoveButtonStyled variant=\"primary\" onClick={onClick}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                </svg>\r\n            </AddRemoveButtonStyled>\r\n        );\r\n    }\r\n    if (icon === \"minus\") {\r\n        return (\r\n            <AddRemoveButtonStyled variant=\"primary\" onClick={onClick}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n                    <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\" />\r\n                </svg>\r\n            </AddRemoveButtonStyled>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddRemoveButton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport AddRemoveButton from \"./AddRemoveButton\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addItemToCart, removeItemFromCart } from \"../store/manage\";\r\n\r\nconst AddRemoveStyled = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    margin: \"10px 10px\",\r\n    width: \"162px\",\r\n});\r\n\r\nconst MyInput = styled(Form.Control)`\r\n    width: 70px;\r\n    margin: auto 10px;\r\n`;\r\n\r\nconst allowOnlyNumbers = (text) => {\r\n    const regex1 = /[^\\d]/g;\r\n    const onlyNumbers = text.replace(regex1, \"\");\r\n    const number = Number.parseInt(onlyNumbers);\r\n    return number;\r\n};\r\n\r\nfunction AddRemove({ item, inCart }) {\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector((state) => state.manage.cart);\r\n    const [number, setNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (cart.length === 0) {\r\n            setNumber(0);\r\n        }\r\n    }, [cart]);\r\n\r\n    useEffect(() => {\r\n        if (inCart) {\r\n            setNumber(inCart.number);\r\n        }\r\n    }, [inCart]);\r\n\r\n    const changeNumber = (newNumber) => {\r\n        const obj = {\r\n            ...item,\r\n            number: newNumber,\r\n        };\r\n        dispatch(addItemToCart(obj));\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        const number = allowOnlyNumbers(e.target.value);\r\n        if (number >= 0) {\r\n            setNumber(number);\r\n            changeNumber(number);\r\n        }\r\n        if (e.target.value === \"\") {\r\n            setNumber(\"\");\r\n            return;\r\n        }\r\n        if (number === 0) {\r\n            setNumber(0);\r\n            dispatch(removeItemFromCart(item));\r\n            return;\r\n        }\r\n    };\r\n\r\n    const closeKeyboard = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.target.blur();\r\n        }\r\n    };\r\n\r\n    const minusItem = () => {\r\n        if (number - 1 > 0) {\r\n            setNumber(number - 1);\r\n            changeNumber(number - 1);\r\n            return;\r\n        }\r\n        if (number - 1 === 0) {\r\n            setNumber(0);\r\n            dispatch(removeItemFromCart(item));\r\n            return;\r\n        }\r\n    };\r\n\r\n    const plusItem = () => {\r\n        setNumber(number + 1);\r\n        changeNumber(number + 1);\r\n    };\r\n\r\n    const handleEmptyString = () => {\r\n        if (number === \"\") {\r\n            setNumber(0);\r\n            dispatch(removeItemFromCart(item));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AddRemoveStyled>\r\n            <AddRemoveButton icon=\"minus\" onClick={minusItem} />\r\n            <MyInput\r\n                onChange={handleInput}\r\n                value={number}\r\n                onFocus={(e) => e.target.select()}\r\n                onKeyDown={closeKeyboard}\r\n                inputMode=\"numeric\"\r\n                onBlur={handleEmptyString}\r\n            />\r\n            <AddRemoveButton icon=\"plus\" onClick={plusItem} />\r\n        </AddRemoveStyled>\r\n    );\r\n}\r\n\r\nexport default AddRemove;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst IconCheckStyled = styled.div({\r\n    position: \"absolute\",\r\n    right: \"20px\",\r\n});\r\n\r\nfunction IconCheck() {\r\n    return (\r\n        <IconCheckStyled>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"#54cc91\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n            </svg>\r\n        </IconCheckStyled>\r\n    );\r\n}\r\n\r\nexport default IconCheck;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction ShowPic({ item, fullscreen, onHide }) {\r\n    return (\r\n        <Modal show={item} fullscreen={fullscreen} onHide={onHide}>\r\n            <Modal.Header closeButton>\r\n                <h6>{item.title}</h6>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <img src={item.img} alt={\"\"} style={{ maxWidth: \"100%\", height: \"auto\" }}></img>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ShowPic;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport AddRemove from \"./AddRemove\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeSideBarOpened } from \"../store/manage\";\r\nimport IconCheck from \"./IconCheck\";\r\nimport ShowPic from \"./ShowPic\";\r\n\r\nconst CardStyled = styled(Container)`\r\n    position: relative;\r\n    background-color: white;\r\n    margin: 10px 10px;\r\n    padding: 10px 10px;\r\n    max-width: 1210px;\r\n`;\r\n\r\nconst MyRow = styled(Row)`\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n`;\r\n\r\nconst MyCol = styled(Col)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    padding: 10px 10px;\r\n    text-align: center;\r\n`;\r\n\r\nconst Prices = styled(Col)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    padding: 10px 10px;\r\n    text-align: center;\r\n    max-width: 200px;\r\n`;\r\n\r\n// const MyColAddRemove = styled.div(({ sideBarOpened, mobileScreen }) => {\r\n//     return {\r\n//         display: sideBarOpened && mobileScreen ? \"none\" : \"flex\",\r\n//         justifyContent: \"center\",\r\n//     };\r\n// });\r\n\r\nconst RetailPrice = styled.div({\r\n    //backgroundColor: \"#69F0AE\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"500\",\r\n    padding: \"2px 5px\",\r\n    borderRadius: \"3px\",\r\n});\r\n\r\nconst Tip = styled.div({\r\n    fontSize: \"12px\",\r\n});\r\n\r\nfunction Card({ item }) {\r\n    const dispatch = useDispatch();\r\n    const sideBarOpened = useSelector((state) => state.manage.sideBarOpened);\r\n    const mobileScreen = useSelector((state) => state.manage.mobileScreen);\r\n    const cart = useSelector((state) => state.manage.cart);\r\n    const priceType = useSelector((state) => state.manage.priceType);\r\n\r\n    const [inCart, setInCart] = useState(false);\r\n    const [showImage, setShowImage] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (cart.length > 0) {\r\n            const includedInCart = cart.find((itemInCart) => itemInCart.id === item.id);\r\n            if (includedInCart) {\r\n                setInCart(includedInCart);\r\n            } else {\r\n                setInCart(false);\r\n            }\r\n        } else {\r\n            setInCart(false);\r\n        }\r\n    }, [cart]);\r\n\r\n    const handleSelect = (name) => {\r\n        if (mobileScreen) {\r\n            dispatch(changeSideBarOpened(false));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CardStyled onClick={() => handleSelect()}>\r\n            {inCart ? <IconCheck /> : null}\r\n            <MyRow>\r\n                {item.img ? (\r\n                    <Col xs=\"auto\">\r\n                        {sideBarOpened && mobileScreen ? (\r\n                            <img src={item.img} alt={\"\"} width=\"100\" height=\"100\"></img>\r\n                        ) : (\r\n                            <img\r\n                                src={item.img}\r\n                                alt={\"\"}\r\n                                width=\"100\"\r\n                                height=\"100\"\r\n                                onClick={() => setShowImage(item)}\r\n                                style={{ cursor: \"pointer\" }}\r\n                            ></img>\r\n                        )}\r\n                    </Col>\r\n                ) : null}\r\n                <MyCol style={{ fontWeight: \"500\" }} xs={12} sm={12} md={5}>\r\n                    {item.title}\r\n                </MyCol>\r\n                <Prices sm={12} md={3}>\r\n                    {priceType === \"с НДС\" ? (\r\n                        <div>\r\n                            <RetailPrice>{item.price} руб</RetailPrice>\r\n                            <Tip>Цена с НДС</Tip>\r\n                        </div>\r\n                    ) : null}\r\n                    {priceType === \"без НДС\" ? (\r\n                        <div>\r\n                            <RetailPrice>{item.priceopt} руб</RetailPrice>\r\n                            <Tip>Цена без НДС</Tip>\r\n                        </div>\r\n                    ) : null}\r\n                    {priceType === \"без НДС (от 250р)\" ? (\r\n                        <div>\r\n                            <RetailPrice>{item.pricemegaopt} руб</RetailPrice>\r\n                            <Tip>Цена без НДС при общей сумме заказа от 250 руб</Tip>\r\n                        </div>\r\n                    ) : null}\r\n                </Prices>\r\n                {sideBarOpened && mobileScreen ? null : (\r\n                    <Col xs=\"auto\">\r\n                        <AddRemove item={item} inCart={inCart} />\r\n                    </Col>\r\n                )}\r\n            </MyRow>\r\n\r\n            <ShowPic item={showImage} fullscreen={true} onHide={() => setShowImage(false)} />\r\n        </CardStyled>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Card from \"./Card\";\r\nimport colors from \"../settings/colors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst MainStyled = styled.div(({ sideBarOpened, mobileScreen }) => {\r\n    return {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        marginBottom: mobileScreen ? \"40px\" : \"80px\",\r\n        overflow: \"auto\",\r\n        overflowX: \"hidden\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        backgroundColor: colors.lightGreyBackground,\r\n        padding: \"10px 10px\",\r\n    };\r\n});\r\n\r\nconst Error = styled.div({\r\n    margin: \"30px 10px\",\r\n});\r\n\r\nconst MyButton = styled(Button)`\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    &:focus {\r\n        outline: none;\r\n        box-shadow: none;\r\n    }\r\n`;\r\n\r\nfunction Main() {\r\n    const [showNumber, setShowNumber] = useState(20);\r\n    const items = useSelector((state) => state.manage.items);\r\n    const sideBarOpened = useSelector((state) => state.manage.sideBarOpened);\r\n    const selectedCategory = useSelector((state) => state.manage.selectedCategory);\r\n    const mobileScreen = useSelector((state) => state.manage.mobileScreen);\r\n    const searchInput = useSelector((state) => state.manage.searchInput);\r\n    const search = useSelector((state) => state.manage.search);\r\n\r\n    const [searchedItems, setSearchedItems] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (search && searchInput.length > 0) {\r\n            const searchedItems = {};\r\n            for (const category in items) {\r\n                const arr = items[category].filter((item) => {\r\n                    for (let i = 0; i < searchInput.length; i++) {\r\n                        if (item.title.toLowerCase().includes(searchInput[i])) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n                searchedItems[category] = arr;\r\n            }\r\n            setSearchedItems(searchedItems);\r\n        } else {\r\n            setSearchedItems(items);\r\n        }\r\n    }, [items, search, searchInput]);\r\n\r\n    const ref = React.createRef();\r\n\r\n    useEffect(() => {\r\n        setShowNumber(20);\r\n        if (ref.current) {\r\n            ref.current.scroll(0, 0);\r\n        }\r\n    }, [searchedItems, selectedCategory]);\r\n\r\n    const showMore = () => {\r\n        setShowNumber(showNumber + 20);\r\n    };\r\n\r\n    if (searchedItems && selectedCategory && searchedItems[selectedCategory]) {\r\n        return (\r\n            <MainStyled sideBarOpened={sideBarOpened} mobileScreen={mobileScreen} ref={ref}>\r\n                {searchedItems[selectedCategory].length > 0 ? (\r\n                    searchedItems[selectedCategory].map((item, index) => (index <= showNumber ? <Card item={item} key={item.id} /> : null))\r\n                ) : (\r\n                    <Error>Нет товаров в данной категории</Error>\r\n                )}\r\n                {showNumber < searchedItems[selectedCategory].length ? (\r\n                    <MyButton variant=\"primary\" size={mobileScreen ? \"sm\" : \"\"} onClick={showMore}>\r\n                        Показать еще\r\n                    </MyButton>\r\n                ) : null}\r\n            </MainStyled>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Main;\r\n","const priceTypes = [\"с НДС\", \"без НДС\", \"без НДС (от 250р)\"];\r\nexport default priceTypes;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setPriceType } from \"../store/manage\";\r\nimport priceTypes from \"../settings/priceTypes\";\r\n\r\nconst SelectPriceStyled = styled.div({});\r\n\r\nfunction SelectPrice() {\r\n    const dispatch = useDispatch();\r\n    const priceType = useSelector((state) => state.manage.priceType);\r\n\r\n    const handlePriceType = (type) => {\r\n        dispatch(setPriceType(type));\r\n    };\r\n\r\n    return (\r\n        <SelectPriceStyled>\r\n            <DropdownButton id=\"dropdown\" drop=\"up\" variant=\"outline-secondary\" title={priceType ? priceType : \"\"} size=\"sm\">\r\n                {priceTypes.map((type) => (\r\n                    <Dropdown.Item eventKey={type} key={type} onClick={() => handlePriceType(type)}>\r\n                        {type}\r\n                    </Dropdown.Item>\r\n                ))}\r\n            </DropdownButton>\r\n        </SelectPriceStyled>\r\n    );\r\n}\r\n\r\nexport default SelectPrice;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst CleanCartButtonStyled = styled.div(({ mobileScreen }) => {\r\n    return {\r\n        position: \"absolute\",\r\n        bottom: mobileScreen ? \"50px\" : \"90px\",\r\n        right: mobileScreen ? \"30px\" : \"50px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"24px\",\r\n        height: \"24px\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#cd41e7\",\r\n        borderRadius: \"12px\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n            borderRadius: \"12px\",\r\n        },\r\n    };\r\n});\r\n\r\nfunction CleanCartButton({ onClick, mobileScreen }) {\r\n    return (\r\n        <CleanCartButtonStyled onClick={onClick} mobileScreen={mobileScreen}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"white\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n            </svg>\r\n        </CleanCartButtonStyled>\r\n    );\r\n}\r\n\r\nexport default CleanCartButton;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction AskCleanCartModal({ show, onHide, onClean, ...otherProps }) {\r\n    return (\r\n        <Modal show={show} {...otherProps} size=\"sm\" centered onHide={onHide}>\r\n            <Modal.Body style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <p>Очистить корзину?</p>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n                <Button onClick={onHide} variant=\"outline-primary\">\r\n                    Отмена\r\n                </Button>\r\n                <Button onClick={onClean} style={{ width: \"81px\" }}>\r\n                    Да\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AskCleanCartModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setCartSum } from \"../store/manage\";\r\nimport SelectPrice from \"./SelectPrice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CleanCartButton from \"./CleanCartButton\";\r\nimport AskCleanCartModal from \"./AskCleanCartModal\";\r\nimport { cleanCart } from \"../store/manage\";\r\nimport { calculateSum } from \"../utilities/calculate\";\r\n\r\nconst CartPanelStyled = styled.div(({ sideBarOpened, mobileScreen }) => {\r\n    const getLeft = () => {\r\n        if (mobileScreen) {\r\n            return \"0\";\r\n        } else {\r\n            return sideBarOpened ? \"170px\" : \"0\";\r\n        }\r\n    };\r\n\r\n    return {\r\n        position: \"absolute\",\r\n        bottom: \"0\",\r\n        height: mobileScreen ? \"40px\" : \"80px\",\r\n        backgroundColor: \"#ededed\",\r\n        left: getLeft(),\r\n        transition: \"left 0.5s\",\r\n        right: \"0\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    };\r\n});\r\n\r\nconst MyButton = styled(Button)({\r\n    \"&:focus\": {\r\n        outline: \"none\",\r\n        boxShadow: \"none\",\r\n    },\r\n});\r\n\r\nconst Price = styled.div((props) => {\r\n    return {\r\n        textAlign: \"center\",\r\n        fontSize: props.mobileScreen ? \"18px\" : \"25px\",\r\n        fontWeight: \"600\",\r\n        marginRight: \"10px\",\r\n        marginLeft: \"10px\",\r\n    };\r\n});\r\n\r\nconst PricePanel = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n});\r\n\r\nfunction CartPanel() {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const sideBarOpened = useSelector((state) => state.manage.sideBarOpened);\r\n    const mobileScreen = useSelector((state) => state.manage.mobileScreen);\r\n    const priceType = useSelector((state) => state.manage.priceType);\r\n    const cart = useSelector((state) => state.manage.cart);\r\n    const sum = useSelector((state) => state.manage.cartSum);\r\n    const [showAsk, setShowAsk] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (cart.length > 0) {\r\n            const sum = calculateSum(cart, priceType);\r\n            dispatch(setCartSum(sum));\r\n        }\r\n        if (cart.length === 0) {\r\n            dispatch(setCartSum(0));\r\n        }\r\n    }, [cart, priceType]);\r\n\r\n    const handleCleanCart = () => {\r\n        dispatch(cleanCart());\r\n        setShowAsk(false);\r\n    };\r\n\r\n    return (\r\n        <CartPanelStyled sideBarOpened={sideBarOpened} mobileScreen={mobileScreen}>\r\n            <MyButton\r\n                disabled={cart.length === 0}\r\n                variant=\"primary\"\r\n                size={mobileScreen ? \"sm\" : \"\"}\r\n                style={{ marginLeft: mobileScreen ? \"15px\" : \"50px\" }}\r\n                onClick={() => navigate(\"/cart\")}\r\n            >\r\n                Оформить\r\n            </MyButton>\r\n            <PricePanel>\r\n                <SelectPrice />\r\n                <Price mobileScreen={mobileScreen}>{sum.toFixed(2)} руб</Price>\r\n            </PricePanel>\r\n            {cart.length > 0 ? <CleanCartButton onClick={() => setShowAsk(true)} mobileScreen={mobileScreen} /> : null}\r\n            <AskCleanCartModal show={showAsk} onHide={() => setShowAsk(false)} onClean={handleCleanCart} />\r\n        </CartPanelStyled>\r\n    );\r\n}\r\n\r\nexport default CartPanel;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Main from \"../components/Main\";\r\nimport CartPanel from \"../components/CartPanel\";\r\n\r\nconst MyContainer = styled.div({\r\n    position: \"absolute\",\r\n    top: \"50px\",\r\n    bottom: \"0px\",\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n});\r\n\r\nconst Home = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <MyContainer>\r\n                <Sidebar />\r\n                <Main />\r\n            </MyContainer>\r\n            <CartPanel />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction TableRow({ item, priceType }) {\r\n    const getPrice = () => {\r\n        if (priceType === \"с НДС\") {\r\n            return item.price;\r\n        }\r\n        if (priceType === \"без НДС\") {\r\n            return item.priceopt;\r\n        }\r\n        if (priceType === \"без НДС (от 250р)\") {\r\n            return item.pricemegaopt;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <tr>\r\n            <td>{item.title}</td>\r\n            <td>{item.number}</td>\r\n            <td>{getPrice()}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nconst CartTableStyled = styled.div({\r\n    width: \"100%\",\r\n    maxWidth: \"1000px\",\r\n});\r\n\r\nconst EmptyCart = styled.div({\r\n    textAlign: \"center\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nfunction CartTable({ cart, priceType, sum }) {\r\n    if (cart.length > 0) {\r\n        return (\r\n            <CartTableStyled>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Наименование</th>\r\n                            <th>Кол.</th>\r\n                            <th>Цена</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {cart.map((item) => (\r\n                            <TableRow item={item} priceType={priceType} key={item.id} />\r\n                        ))}\r\n                        <tr>\r\n                            <th colSpan=\"2\">Общая сумма</th>\r\n                            <th>{sum.toFixed(2)}</th>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                Цена: {priceType}\r\n            </CartTableStyled>\r\n        );\r\n    }\r\n    return <EmptyCart>Корзина пуста</EmptyCart>;\r\n}\r\n\r\nexport default CartTable;\r\n","import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction FormInput({ name, label, ...otherProps }) {\r\n    const { setFieldTouched, setFieldValue, errors, touched, values } = useFormikContext();\r\n    return (\r\n        <Form.Group className=\"mb-3\" controlId={\"cart_form_\" + [name]}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <Form.Control\r\n                type=\"text\"\r\n                name={name}\r\n                value={values[name]}\r\n                onChange={(e) => setFieldValue(name, e.target.value)}\r\n                onBlur={() => setFieldTouched(name)}\r\n                isValid={touched[name] && !errors[name]}\r\n                isInvalid={touched[name] ? errors[name] : null}\r\n                {...otherProps}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">{errors[name]}</Form.Control.Feedback>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default FormInput;\r\n","import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst CheckStyled = styled(Form.Check)({\r\n    \"& label\": {\r\n        cursor: \"pointer\",\r\n    },\r\n});\r\n\r\nfunction FormCheckBoxRadio({ name, label, value, ...otherProps }) {\r\n    const { setFieldValue, values } = useFormikContext();\r\n    return (\r\n        <CheckStyled\r\n            name={name}\r\n            label={label}\r\n            type=\"radio\"\r\n            id={\"payment_\" + value}\r\n            value={value}\r\n            checked={values[name] === value}\r\n            onChange={(e) => setFieldValue(name, value)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default FormCheckBoxRadio;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { cleanCart } from \"../store/manage\";\r\n\r\nconst CartSentModalStyled = styled.div({});\r\n\r\nfunction CartSentModal({ onHide, email, showDone, orderID, ...otherProps }) {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const close = () => {\r\n        onHide();\r\n        dispatch(cleanCart());\r\n        navigate(\"/\");\r\n    };\r\n    return (\r\n        <CartSentModalStyled>\r\n            {showDone === \"OK\" ? (\r\n                <Modal {...otherProps} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                    <Modal.Body>\r\n                        <h5 style={{ textAlign: \"center\" }}>Заказ отправлен!</h5>\r\n                        <p>\r\n                            Номер Вашего заказа <b>{orderID}</b>. Подтверждение заказа отправлено на Ваш email: <b>{email}</b>\r\n                        </p>\r\n                        <p>В ближайшее время с Вами свяжется наш менеджер для уточнения деталей доставки.</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <Button onClick={close}>На главную</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            ) : null}\r\n            {showDone === \"Error\" ? (\r\n                <Modal {...otherProps} size=\"sm\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                    <Modal.Body>\r\n                        <h5 style={{ textAlign: \"center\" }}>Произошла ошибка!</h5>\r\n                        <p>Ваш заказ не отправлен.</p>\r\n                        <p>Обратитесь в службу поддержки или попробуйте позже.</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <Button onClick={() => onHide()}>Закрыть</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            ) : null}\r\n        </CartSentModalStyled>\r\n    );\r\n}\r\n\r\nexport default CartSentModal;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormInput from \"./FormInput\";\r\nimport itemsAPI from \"../api/items\";\r\nimport FormCheckBoxRadio from \"./FormCheckBoxRadio\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLoading, getHistory } from \"../store/manage\";\r\nimport CartSentModal from \"./CartSentModal\";\r\n\r\nconst CartFormStyled = styled.div({\r\n    marginTop: \"30px\",\r\n    maxWidth: \"1000px\",\r\n    width: \"100%\",\r\n});\r\n\r\nconst CheckGroup = styled.div({\r\n    marginTop: \"30px\",\r\n});\r\n\r\nconst ButtonGroup = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"30px\",\r\n});\r\n\r\nconst payment_methods = [\r\n    {\r\n        id: 1,\r\n        label: \"Безналичный расчет (для юридических лиц)\",\r\n        value: \"Безналичный расчет (для юридических лиц)\",\r\n    },\r\n    {\r\n        id: 2,\r\n        label: \"Наличными\",\r\n        value: \"Наличными\",\r\n    },\r\n    {\r\n        id: 3,\r\n        label: \"Банковской картой (только при самовывозе)\",\r\n        value: \"Банковской картой (только при самовывозе)\",\r\n    },\r\n    {\r\n        id: 4,\r\n        label: \"Банковский перевод по реквизитам\",\r\n        value: \"Банковский перевод по реквизитам\",\r\n    },\r\n];\r\n\r\nconst delivery_methods = [\r\n    {\r\n        id: 1,\r\n        label: \"по Минску\",\r\n        value: \"по Минску\",\r\n    },\r\n    {\r\n        id: 2,\r\n        label: \"по Беларуси\",\r\n        value: \"по Беларуси\",\r\n    },\r\n    {\r\n        id: 3,\r\n        label: \"Самовывоз\",\r\n        value: \"Самовывоз\",\r\n    },\r\n];\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Укажите имя\"),\r\n    email: Yup.string().required(\"Укажите email\").email(\"Укажите email\"),\r\n    phone: Yup.string().required(\"Укажите телефон\"),\r\n});\r\n\r\nfunction CartForm({ cart, priceType, sum }) {\r\n    const user = useSelector((state) => state.manage.user);\r\n    const [showDone, setShowDone] = useState(\"hide\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [orderID, setOrderID] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const calcSum = (item) => {\r\n        let sum;\r\n        if (priceType === \"с НДС\") {\r\n            sum = item.price * item.number;\r\n        }\r\n        if (priceType === \"без НДС\") {\r\n            sum = item.priceopt * item.number;\r\n        }\r\n        if (priceType === \"без НДС (от 250р)\") {\r\n            sum = item.pricemegaopt * item.number;\r\n        }\r\n\r\n        return Number(sum.toFixed(2));\r\n    };\r\n\r\n    const getPrice = (item) => {\r\n        if (priceType === \"с НДС\") {\r\n            return item.price;\r\n        }\r\n        if (priceType === \"без НДС\") {\r\n            return item.priceopt;\r\n        }\r\n        if (priceType === \"без НДС (от 250р)\") {\r\n            return item.pricemegaopt;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (values) => {\r\n        setEmail(values.email);\r\n        console.log(values);\r\n        console.log(cart);\r\n\r\n        const newCart = [];\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const item = {\r\n                title: cart[i].title,\r\n                article: cart[i].article,\r\n                number: cart[i].number,\r\n                price: getPrice(cart[i]),\r\n                sum: calcSum(cart[i]),\r\n            };\r\n            newCart.push(item);\r\n        }\r\n\r\n        const data = {\r\n            cart: newCart,\r\n            customer: values,\r\n            priceType,\r\n            sum: Number(sum.toFixed(2)),\r\n            date: Date.now(),\r\n        };\r\n\r\n        if (user) {\r\n            data.customer.id = user.id;\r\n        }\r\n\r\n        dispatch(setLoading(true));\r\n        itemsAPI\r\n            .sendCart(data)\r\n            .then((response) => {\r\n                dispatch(setLoading(false));\r\n                if (response.status === 200) {\r\n                    setOrderID(response.data.orderID);\r\n                    dispatch(getHistory(user.id));\r\n                    setShowDone(\"OK\");\r\n                } else {\r\n                    setShowDone(\"Error\");\r\n                    console.log(\"error\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(setLoading(false));\r\n                setShowDone(\"Error\");\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const cancel = () => {\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <CartFormStyled>\r\n            <Formik\r\n                initialValues={{\r\n                    name: user ? user.name : \"\",\r\n                    email: user ? user.email : \"\",\r\n                    phone: user ? user.phone : \"\",\r\n                    payment_method: \"Безналичный расчет (для юридических лиц)\",\r\n                    delivery: \"по Минску\",\r\n                    address: user ? user.address : \"\",\r\n                    comment: \"\",\r\n                }}\r\n                enableReinitialize\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <Form noValidate onSubmit={handleSubmit}>\r\n                        <FormInput name=\"name\" label=\"ФИО*\" />\r\n                        <FormInput name=\"phone\" label=\"Телефон*\" inputMode=\"tel\" placeholder={\"+375xxxxxxxxx\"} />\r\n                        <FormInput name=\"email\" label=\"Email*\" inputMode=\"email\" />\r\n                        <FormInput name=\"address\" label=\"Адрес доставки\" />\r\n                        <FormInput name=\"comment\" label=\"Комментарий\" as=\"textarea\" />\r\n                        <CheckGroup>\r\n                            <Form.Label>Способ оплаты:</Form.Label>\r\n                            {payment_methods.map((method) => (\r\n                                <FormCheckBoxRadio name=\"payment_method\" label={method.label} value={method.value} key={method.id} />\r\n                            ))}\r\n                        </CheckGroup>\r\n                        <CheckGroup>\r\n                            <Form.Label>Доставка:</Form.Label>\r\n                            {delivery_methods.map((method) => (\r\n                                <FormCheckBoxRadio name=\"delivery\" label={method.label} value={method.value} key={method.id} />\r\n                            ))}\r\n                        </CheckGroup>\r\n                        <ButtonGroup>\r\n                            <Button variant=\"outline-primary\" onClick={cancel}>\r\n                                Отмена\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Отправить\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            <CartSentModal\r\n                show={showDone !== \"hide\"}\r\n                onHide={() => setShowDone(\"hide\")}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                email={email}\r\n                showDone={showDone}\r\n                orderID={orderID}\r\n            />\r\n        </CartFormStyled>\r\n    );\r\n}\r\n\r\nexport default CartForm;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CartTable from \"../components/CartTable\";\r\nimport CartForm from \"../components/CartForm\";\r\n\r\nconst Title = styled.div({\r\n    textAlign: \"center\",\r\n    margin: \"20px 10px\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n    maxWidth: \"1000px\",\r\n});\r\n\r\nconst CartStyled = styled.div({\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginBottom: \"20px\",\r\n    marginRight: \"10px\",\r\n    marginLeft: \"10px\",\r\n});\r\n\r\nfunction Cart() {\r\n    const cart = useSelector((state) => state.manage.cart);\r\n    const priceType = useSelector((state) => state.manage.priceType);\r\n    const sum = useSelector((state) => state.manage.cartSum);\r\n\r\n    return (\r\n        <CartStyled>\r\n            <Title>Оформление заказа</Title>\r\n            <CartTable cart={cart} priceType={priceType} sum={sum} />\r\n            <CartForm cart={cart} priceType={priceType} sum={sum} />\r\n        </CartStyled>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NoMatchStyled = styled.div({\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    fontSize: \"20px\",\r\n    marginTop: \"30px\",\r\n});\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <NoMatchStyled>\r\n            Ай ай ай! Нет такого пути!\r\n            <Link to=\"/\"> На главную</Link>\r\n        </NoMatchStyled>\r\n    );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst LoadingStyled = styled.div({\r\n    position: \"fixed\",\r\n    top: \"0px\",\r\n    bottom: \"0px\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n});\r\n\r\nfunction Loading() {\r\n    return (\r\n        <LoadingStyled>\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                style={{ margin: \"auto\", background: \"rgba(0, 0, 0, 0) none repeat scroll 0% 0%\", display: \"block\", shapeRendering: \"auto\" }}\r\n                width=\"60px\"\r\n                height=\"60px\"\r\n                viewBox=\"0 0 100 100\"\r\n                preserveAspectRatio=\"xMidYMid\"\r\n            >\r\n                <circle cx=\"50\" cy=\"50\" fill=\"none\" stroke=\"#3be8b0\" strokeWidth=\"10\" r=\"35\" strokeDasharray=\"164.93361431346415 56.97787143782138\">\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"rotate\"\r\n                        repeatCount=\"indefinite\"\r\n                        dur=\"1s\"\r\n                        values=\"0 50 50;360 50 50\"\r\n                        keyTimes=\"0;1\"\r\n                    ></animateTransform>\r\n                </circle>\r\n            </svg>\r\n        </LoadingStyled>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst AboutStyled = styled.div({\r\n    margin: \"10px 20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n});\r\n\r\nconst Title = styled.div({\r\n    textAlign: \"center\",\r\n    margin: \"20px 10px\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nfunction About() {\r\n    return (\r\n        <AboutStyled>\r\n            <Title>О компании</Title>\r\n            <div>\r\n                <p>\r\n                    <span style={{ fontWeight: \"500\" }}>Bortik Project</span> - молодая и динамично развивающаяся компания, которая за короткое время\r\n                    сумела занять прочное место среди ведущих поставщиков хозяйственных товаров в Беларуси.\r\n                </p>\r\n                <p>Залог нашего успеха - ответственность и внимательный подход к каждому клиенту.</p>\r\n            </div>\r\n        </AboutStyled>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormInput from \"../components/FormInput\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLoading } from \"../store/manage\";\r\nimport userAPI from \"../api/user\";\r\nimport { setUser, getHistory } from \"../store/manage\";\r\n\r\nconst LoginStyled = styled.div({\r\n    margin: \"10px 20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n});\r\n\r\nconst Title = styled.div({\r\n    textAlign: \"center\",\r\n    margin: \"20px 10px\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nconst Error = styled.div({\r\n    color: \"red\",\r\n    marginBottom: \"10px\",\r\n});\r\n\r\nconst ButtonGroup = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"30px\",\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"Укажите email\").email(\"Укажите email\"),\r\n    password: Yup.string().required(\"Введите пароль\"),\r\n});\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleSubmit = (values) => {\r\n        setError(\"\");\r\n        dispatch(setLoading(true));\r\n        userAPI\r\n            .login(values)\r\n            .then((response) => {\r\n                dispatch(setLoading(false));\r\n                if (response.status === 200) {\r\n                    dispatch(setUser(response.data));\r\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                    navigate(\"/account\");\r\n                    dispatch(getHistory(response.data.id));\r\n                } else if (response.status === 401) {\r\n                    setError(\"Неверный логин или пароль\");\r\n                } else {\r\n                    setError(\"Неизвестная ошибка! Обратитесь в службу поддержки.\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(setLoading(false));\r\n                setError(\"Неизвестная ошибка! Обратитесь в службу поддержки.\");\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const cancel = () => {\r\n        navigate(\"/\");\r\n    };\r\n    return (\r\n        <LoginStyled>\r\n            <Title>Вход в личный кабинет</Title>\r\n            <Formik\r\n                initialValues={{\r\n                    email: process.env.NODE_ENV === \"development\" ? \"www1@www.ww\" : \"\",\r\n                    password: process.env.NODE_ENV === \"development\" ? \"12345\" : \"\",\r\n                    // email: \"\",\r\n                    // password: \"\",\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <Form noValidate onSubmit={handleSubmit} style={{ maxWidth: \"400px\", width: \"100%\" }}>\r\n                        <FormInput name=\"email\" label=\"Email*\" inputMode=\"email\" />\r\n                        <FormInput name=\"password\" label=\"Пароль*\" type=\"password\" />\r\n\r\n                        {error !== \"\" ? <Error>{error}</Error> : null}\r\n\r\n                        <div style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/forgot_password\">Забыл пароль</Link>\r\n                        </div>\r\n                        <div>\r\n                            <Link to=\"/register\">Зарегистрироваться</Link>\r\n                        </div>\r\n\r\n                        <ButtonGroup>\r\n                            <Button variant=\"outline-primary\" onClick={cancel}>\r\n                                Отмена\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\" style={{ width: \"80px\" }}>\r\n                                Войти\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </LoginStyled>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst AccountDataTableStyled = styled.div({\r\n    width: \"100%\",\r\n    maxWidth: \"700px\",\r\n});\r\n\r\nfunction AccountDataTable({ user }) {\r\n    return (\r\n        <AccountDataTableStyled>\r\n            <Table striped bordered hover>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>ФИО</td>\r\n                        <td>{user.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Email</td>\r\n                        <td>{user.email}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Телефон</td>\r\n                        <td>{user.phone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Адрес доставки</td>\r\n                        <td>{user.address}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </AccountDataTableStyled>\r\n    );\r\n}\r\n\r\nexport default AccountDataTable;\r\n\r\n{\r\n    /* <div>ФИО: {user.name}</div>\r\n                    <div>Email: {user.email}</div>\r\n                    <div>Телефон: {user.phone}</div>\r\n                    <div>Адрес доставки: {user.address}</div> */\r\n}\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nfunction HistoryTableRow({ item }) {\r\n    return (\r\n        <tr>\r\n            <td>{item.title}</td>\r\n            <td>{item.number}</td>\r\n            <td>{item.price}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default HistoryTableRow;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport HistoryTableRow from \"./HistoryTableRow\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst HistoryTableBlockStyled = styled.div({\r\n    marginBottom: \"20px\",\r\n});\r\n\r\nconst Divider = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    borderBottom: \"1px solid #e9e9e9\",\r\n    paddingBottom: \"20px\",\r\n});\r\n\r\nconst createDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\r\n    const month = date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n    const h = date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\r\n    const m = date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\r\n\r\n    const result = `${day}.${month}.${year} - ${h}:${m}`;\r\n\r\n    return result;\r\n};\r\n\r\nfunction HistoryTableBlock({ order }) {\r\n    return (\r\n        <HistoryTableBlockStyled>\r\n            <div style={{ fontWeight: \"500\" }}>Заказ №{order.id}</div>\r\n            <div>Дата: {createDate(Number(order.date))}</div>\r\n            <div>Тип цены: {order.price_type}</div>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Наименование</th>\r\n                        <th>Кол.</th>\r\n                        <th>Цена</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {order.items.map((item) => (\r\n                        <HistoryTableRow item={item} key={item.id} />\r\n                    ))}\r\n                    <tr>\r\n                        <th colSpan=\"2\">Общая сумма</th>\r\n                        <th>{order.sum}</th>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n            <Divider>\r\n                <Button variant=\"primary\">Повторить заказ</Button>\r\n            </Divider>\r\n        </HistoryTableBlockStyled>\r\n    );\r\n}\r\n\r\nexport default HistoryTableBlock;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport HistoryTableBlock from \"./HistoryTableBlock\";\r\n\r\nconst HistoryTableStyled = styled.div({\r\n    width: \"100%\",\r\n    maxWidth: \"1000px\",\r\n});\r\n\r\nfunction HistoryTable({ history }) {\r\n    return (\r\n        <HistoryTableStyled>\r\n            {history.map((order) => (\r\n                <HistoryTableBlock order={order} key={order.id} />\r\n            ))}\r\n        </HistoryTableStyled>\r\n    );\r\n}\r\n\r\nexport default HistoryTable;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AccountDataTable from \"../components/AccountDataTable\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router\";\r\nimport HistoryTable from \"../components/HistoryTable\";\r\n\r\nconst AccountStyled = styled.div({\r\n    margin: \"10px 20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n});\r\n\r\nconst Title = styled.div({\r\n    textAlign: \"center\",\r\n    margin: \"20px 10px\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nfunction Account() {\r\n    const navigate = useNavigate();\r\n    const user = useSelector((state) => state.manage.user);\r\n    const history = useSelector((state) => state.manage.history);\r\n\r\n    const edit = () => {\r\n        navigate(\"/edit_account\");\r\n    };\r\n    return (\r\n        <AccountStyled>\r\n            <Title>Личный кабинет</Title>\r\n            {user ? <AccountDataTable user={user} /> : <div>Ошибка</div>}\r\n            <Button variant=\"primary\" onClick={edit} style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\r\n                Редактировать личные данные\r\n            </Button>\r\n            <Title>История покупок</Title>\r\n            {history.length > 0 ? <HistoryTable history={history} /> : null}\r\n        </AccountStyled>\r\n    );\r\n}\r\n\r\nexport default Account;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../store/manage\";\r\n\r\nfunction AccountCreatedModal({ show, onHide, newUser, ...otherProps }) {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const close = () => {\r\n        onHide();\r\n        const user = { ...newUser };\r\n        delete user.password;\r\n        delete user.repeatPassword;\r\n        dispatch(setUser(user));\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {newUser ? (\r\n                <Modal show={show} {...otherProps} size=\"sm\" centered>\r\n                    <Modal.Body>\r\n                        <h5 style={{ textAlign: \"center\", marginBottom: \"15px\" }}>Аккаунт создан!</h5>\r\n                        <p style={{ marginBottom: \"10px\" }}>\r\n                            Уважаемый {newUser.name}! Ваш аккаунт <b>{newUser.email}</b> создан. Для входа используйте:\r\n                        </p>\r\n                        <p style={{ marginBottom: \"5px\" }}>Логин: {newUser.email}</p>\r\n                        <p style={{ marginBottom: \"5px\" }}>Пароль: {newUser.password}</p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <Button onClick={close}>На главную</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            ) : null}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AccountCreatedModal;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormInput from \"../components/FormInput\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLoading } from \"../store/manage\";\r\nimport userAPI from \"../api/user\";\r\nimport AccountCreatedModal from \"../components/AccountCreatedModal\";\r\n\r\nconst RegisterStyled = styled.div({\r\n    margin: \"10px 20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n});\r\n\r\nconst Title = styled.div({\r\n    textAlign: \"center\",\r\n    margin: \"20px 10px\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nconst Error = styled.div({\r\n    color: \"red\",\r\n    marginBottom: \"10px\",\r\n});\r\n\r\nconst ButtonGroup = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"30px\",\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Укажите имя\"),\r\n    phone: Yup.string().required(\"Укажите телефон\"),\r\n    email: Yup.string().required(\"Укажите email\").email(\"Укажите email\"),\r\n    password: Yup.string().required(\"Введите пароль\"),\r\n    repeatPassword: Yup.string().required(\"Введите пароль\"),\r\n});\r\n\r\nfunction Register() {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState(\"\");\r\n    const [done, setDone] = useState(false);\r\n    const [newUser, setNewUser] = useState(null);\r\n\r\n    const handleSubmit = (values) => {\r\n        if (values.password !== values.repeatPassword) {\r\n            setError(\"Пароль и повтор пароля не совпадают!\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        dispatch(setLoading(true));\r\n        userAPI\r\n            .createAccount(values)\r\n            .then((response) => {\r\n                dispatch(setLoading(false));\r\n                if (response.status === 201) {\r\n                    setNewUser(values);\r\n                    setDone(true);\r\n                } else if (response.status === 409) {\r\n                    setError(\"Данный email уже зарегистрирован!\");\r\n                } else {\r\n                    setError(\"Неизвестная ошибка! Обратитесь в службу поддержки.\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(setLoading(false));\r\n                setError(\"Неизвестная ошибка! Обратитесь в службу поддержки.\");\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const cancel = () => {\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <RegisterStyled>\r\n            <Title>Регистрация</Title>\r\n            <Formik\r\n                initialValues={{\r\n                    name: \"\",\r\n                    phone: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    repeatPassword: \"\",\r\n                    address: \"\",\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <Form noValidate onSubmit={handleSubmit} style={{ maxWidth: \"400px\", width: \"100%\" }}>\r\n                        <FormInput name=\"name\" label=\"ФИО*\" />\r\n                        <FormInput name=\"phone\" label=\"Телефон*\" inputMode=\"tel\" placeholder={\"+375xxxxxxxxx\"} />\r\n                        <FormInput name=\"email\" label=\"Email*\" inputMode=\"email\" />\r\n                        <FormInput name=\"password\" label=\"Пароль*\" type=\"password\" />\r\n                        <FormInput name=\"repeatPassword\" label=\"Повторите пароль*\" type=\"password\" />\r\n                        <FormInput name=\"address\" label=\"Адрес доставки по умолчанию\" />\r\n\r\n                        {error !== \"\" ? <Error>{error}</Error> : null}\r\n\r\n                        <ButtonGroup>\r\n                            <Button variant=\"outline-primary\" onClick={cancel}>\r\n                                Отмена\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Отправить\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            <AccountCreatedModal show={done} onHide={() => setDone(false)} backdrop=\"static\" keyboard={false} newUser={newUser} />\r\n        </RegisterStyled>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nfunction ForgottenPasswordSentModal({ show, onHide, ...otherProps }) {\r\n    const navigate = useNavigate();\r\n\r\n    const close = () => {\r\n        onHide();\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} {...otherProps} size=\"sm\" centered>\r\n            <Modal.Body>\r\n                <h5 style={{ textAlign: \"center\", marginBottom: \"15px\" }}>Пароль восстановлен!</h5>\r\n                <p style={{ marginBottom: \"10px\" }}>Пароль выслан Вам на email. Проверьте пожалуйста Ваш почтовый ящик.</p>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button onClick={close}>На главную</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ForgottenPasswordSentModal;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport userAPI from \"../api/user\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLoading } from \"../store/manage\";\r\nimport ForgottenPasswordSentModal from \"../components/ForgottenPasswordSentModal\";\r\n\r\nconst ForgotPasswordStyled = styled.div({\r\n    margin: \"10px 20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n});\r\n\r\nconst Title = styled.div({\r\n    margin: \"10px 20px\",\r\n});\r\n\r\nconst Error = styled.div({\r\n    color: \"red\",\r\n    marginTop: \"10px\",\r\n});\r\n\r\nconst MyInput = styled(Form.Control)({\r\n    marginBottom: \"10px\",\r\n    maxWidth: \"300px\",\r\n});\r\n\r\nfunction ForgotPassword() {\r\n    const dispatch = useDispatch();\r\n    const [error, setError] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [done, setDone] = useState(false);\r\n\r\n    const send = () => {\r\n        setError(\"\");\r\n        dispatch(setLoading(true));\r\n        userAPI\r\n            .forgotPassword({ email })\r\n            .then((response) => {\r\n                dispatch(setLoading(false));\r\n                if (response.status === 200) {\r\n                    setDone(true);\r\n                } else if (response.status === 404 && response.data === \"Email not found\") {\r\n                    setError(`Аккаунт ${email} не обнаружен!`);\r\n                } else {\r\n                    setError(\"Неизвестная ошибка! Обратитесь в службу поддержки.\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(setLoading(false));\r\n                setError(\"Неизвестная ошибка! Обратитесь в службу поддержки.\");\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <ForgotPasswordStyled>\r\n            <Title>Если Вы забыли пароль от своего аккаунта, введите свой email и мы пришлем Вам его.</Title>\r\n            <div style={{ display: \"flex\", width: \"100%\", flexDirection: \"column\", alignItems: \"center\", marginTop: \"20px\" }}>\r\n                <MyInput value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"example@example.com\" />\r\n                {error !== \"\" ? <Error>{error}</Error> : null}\r\n                <Button variant=\"primary\" style={{ marginTop: \"20px\" }} onClick={send}>\r\n                    Отправить\r\n                </Button>\r\n            </div>\r\n            <ForgottenPasswordSentModal show={done} onHide={() => setDone(false)} />\r\n        </ForgotPasswordStyled>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"../store/manage\";\r\n\r\nfunction AccountEditedModal({ show, onHide, updatedUser, ...otherProps }) {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const close = () => {\r\n        onHide();\r\n        dispatch(setUser(updatedUser));\r\n        localStorage.setItem(\"user\", JSON.stringify(updatedUser));\r\n        navigate(\"/account\");\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {updatedUser ? (\r\n                <Modal show={show} {...otherProps} size=\"sm\" centered>\r\n                    <Modal.Body>\r\n                        <div style={{ marginBottom: \"10px\", textAlign: \"center\" }}>Аккаунт успешно отредактирован!</div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <Button onClick={close} style={{ width: \"80px\" }}>\r\n                            OK\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            ) : null}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AccountEditedModal;\r\n","import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst CheckStyled = styled(Form.Check)({\r\n    \"& label\": {\r\n        cursor: \"pointer\",\r\n    },\r\n});\r\n\r\nfunction FormCheckBoxSwitch({ name, label, ...otherProps }) {\r\n    const { handleChange } = useFormikContext();\r\n    return (\r\n        <React.Fragment>\r\n            <CheckStyled name={name} label={label} type=\"switch\" id={\"switch_\" + name} onChange={handleChange} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default FormCheckBoxSwitch;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormInput from \"../components/FormInput\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLoading } from \"../store/manage\";\r\nimport userAPI from \"../api/user\";\r\nimport AccountEditedModal from \"../components/AccountEditedModal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FormCheckBoxSwitch from \"../components/FormCheckBoxSwitch\";\r\n\r\nconst EditAccountStyled = styled.div({\r\n    margin: \"10px 20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n});\r\n\r\nconst Title = styled.div({\r\n    textAlign: \"center\",\r\n    margin: \"20px 10px\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n});\r\n\r\nconst Error = styled.div({\r\n    color: \"red\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n});\r\n\r\nconst PasswordGroup = styled.div({\r\n    marginTop: \"20px\",\r\n});\r\n\r\nconst ButtonGroup = styled.div({\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"30px\",\r\n});\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Укажите имя\"),\r\n    phone: Yup.string().required(\"Укажите телефон\"),\r\n    email: Yup.string().required(\"Укажите email\").email(\"Укажите email\"),\r\n    changePassword: Yup.boolean(),\r\n    password: Yup.string().required(\"Введите пароль\"),\r\n    newPassword: Yup.string().when(\"changePassword\", { is: true, then: Yup.string().required(\"Введите пароль\") }),\r\n    repeatNewPassword: Yup.string().when(\"changePassword\", { is: true, then: Yup.string().required(\"Введите пароль\") }),\r\n});\r\n\r\nfunction EditAccount() {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector((state) => state.manage.user);\r\n    const [error, setError] = useState(\"\");\r\n    const [done, setDone] = useState(false);\r\n    const [updatedUser, setUpdatedUser] = useState(null);\r\n\r\n    const handleSubmit = (values) => {\r\n        if (values.changePassword && values.newPassword !== values.repeatNewPassword) {\r\n            setError(\"Пароль и повтор пароля не совпадают!\");\r\n            return;\r\n        }\r\n        let data;\r\n        if (values.changePassword) {\r\n            data = { ...values };\r\n            delete data.repeatNewPassword;\r\n            delete data.changePassword;\r\n        } else {\r\n            data = {\r\n                name: values.name,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                address: values.address,\r\n                password: values.password,\r\n            };\r\n        }\r\n        setError(\"\");\r\n        dispatch(setLoading(true));\r\n        userAPI\r\n            .editAccount(data, user.id)\r\n            .then((response) => {\r\n                dispatch(setLoading(false));\r\n                if (response.status === 200) {\r\n                    const updatedUser = { ...data };\r\n                    delete updatedUser.password;\r\n                    if (updatedUser.newPassword) {\r\n                        delete updatedUser.newPassword;\r\n                    }\r\n                    updatedUser.id = user.id;\r\n                    setUpdatedUser(updatedUser);\r\n                    setDone(true);\r\n                } else if (response.status === 401) {\r\n                    setError(\"Неверный пароль\");\r\n                } else {\r\n                    setError(\"Неизвестная ошибка! Обратитесь в службу поддержки.\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(setLoading(false));\r\n                setError(\"Неизвестная ошибка! Обратитесь в службу поддержки.\");\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const cancel = () => {\r\n        navigate(\"/account\");\r\n    };\r\n\r\n    return (\r\n        <EditAccountStyled>\r\n            <Title>Редактировать личные данные</Title>\r\n            {user ? (\r\n                <Formik\r\n                    initialValues={{\r\n                        name: user.name,\r\n                        phone: user.phone,\r\n                        email: user.email,\r\n                        address: user.address ? user.address : \"\",\r\n                        password: \"\",\r\n                        changePassword: false,\r\n                        newPassword: \"\",\r\n                        repeatNewPassword: \"\",\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({ handleSubmit, values }) => (\r\n                        <Form noValidate onSubmit={handleSubmit} style={{ maxWidth: \"400px\", width: \"100%\" }}>\r\n                            <FormInput name=\"name\" label=\"ФИО*\" />\r\n                            <FormInput name=\"phone\" label=\"Телефон*\" inputMode=\"tel\" placeholder={\"+375xxxxxxxxx\"} />\r\n                            <FormInput name=\"email\" label=\"Email*\" inputMode=\"email\" />\r\n                            <FormInput name=\"address\" label=\"Адрес доставки по умолчанию\" />\r\n                            <FormInput name=\"password\" label={values.changePassword ? \"Текущий пароль*\" : \"Пароль*\"} type=\"password\" />\r\n                            {error !== \"\" ? <Error>{error}</Error> : null}\r\n\r\n                            <FormCheckBoxSwitch name=\"changePassword\" label=\"Изменить пароль\" />\r\n                            {values.changePassword ? (\r\n                                <PasswordGroup>\r\n                                    <FormInput name=\"newPassword\" label=\"Новый пароль*\" type=\"password\" />\r\n                                    <FormInput name=\"repeatNewPassword\" label=\"Повторите новый пароль*\" type=\"password\" />\r\n                                </PasswordGroup>\r\n                            ) : null}\r\n\r\n                            <ButtonGroup>\r\n                                <Button variant=\"outline-primary\" onClick={cancel}>\r\n                                    Отмена\r\n                                </Button>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Отправить\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            ) : null}\r\n            <AccountEditedModal show={done} onHide={() => setDone(false)} backdrop=\"static\" keyboard={false} updatedUser={updatedUser} />\r\n        </EditAccountStyled>\r\n    );\r\n}\r\n\r\nexport default EditAccount;\r\n","import React, { useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport styled from \"@emotion/styled\";\r\nimport handleScreenSize from \"./settings/screenWidth\";\r\nimport { getItems, setUser, setPriceType } from \"./store/manage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./views/Home\";\r\nimport Cart from \"./views/Cart\";\r\nimport NoMatch from \"./views/NoMatch\";\r\nimport Loading from \"./components/Loading\";\r\nimport About from \"./views/About\";\r\nimport Login from \"./views/Login\";\r\nimport Account from \"./views/Account\";\r\nimport Register from \"./views/Register\";\r\nimport ForgotPassword from \"./views/ForgotPassword\";\r\nimport EditAccount from \"./views/EditAccount\";\r\nimport priceTypes from \"./settings/priceTypes\";\r\nimport { getHistory } from \"./store/manage\";\r\n\r\nconst AppStyled = styled.div({\r\n    height: \"100%\",\r\n});\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector((state) => state.manage.loading);\r\n    useEffect(() => {\r\n        handleScreenSize();\r\n        dispatch(getItems());\r\n        const userStr = localStorage.getItem(\"user\");\r\n        const user = JSON.parse(userStr);\r\n        if (user) {\r\n            dispatch(setUser(user));\r\n            dispatch(getHistory(user.id));\r\n        }\r\n        const priceType = localStorage.getItem(\"price_type\");\r\n        if (priceType) {\r\n            dispatch(setPriceType(priceType));\r\n        } else {\r\n            dispatch(setPriceType(priceTypes[0]));\r\n        }\r\n        // if (priceType) {\r\n        //     dispatch(getItems());\r\n        // }\r\n    }, []);\r\n    return (\r\n        <AppStyled>\r\n            <Header />\r\n\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n                <Route path=\"/cart\" element={<Cart />} />\r\n                <Route path=\"/about\" element={<About />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/account\" element={<Account />} />\r\n                <Route path=\"/register\" element={<Register />} />\r\n                <Route path=\"/forgot_password\" element={<ForgotPassword />} />\r\n                <Route path=\"/edit_account\" element={<EditAccount />} />\r\n                <Route path=\"*\" element={<NoMatch />} />\r\n            </Routes>\r\n            {loading ? <Loading /> : null}\r\n        </AppStyled>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}